# The base configuration contains all the flags shared between debug and release configurations
config clang-config for toolchain(clang, gcc) {
    compile: {
        extension: ".o",
        flags: [
            "-std=c99",
            "-Wall",
            "-Werror",
            "-Wextra",
            "-pedantic",
            "-Wmissing-field-initializers",
            "-Wno-unused-value",
            "-Wno-unused-parameter",
            "-Wno-unused-variable",
            "-Wno-unused-function",
            "-Wno-missing-braces",
            "-fstrict-aliasing",
            "-Wvla",
            "-finput-charset=UTF-8",
            "-fexec-charset=UTF-8",
            "-D_FORTIFY_SOURCE=2",
            # ${sbs.input_file} is a special variable that contains the source filename
            "-c ${sbs.input_file}",
            # The ${sbs.output_file} variable contains the output name for the compiled object
            "-o ${sbs.output_file}"
        ]
    },    

    # Specific overrides for linux envs
    if env(linux-bash) {
        compile: { flags: [ "-fPIC" ] },
        archive: { extension: ".a", flags: [ "rcs" ] },
        shared: {
            extension: ".so",
            flags: [ "-shared", "-o ${sbs.output_file}" ]
        },
        executable: {
            extension: "",
            flags: [ "-o ${sbs.output_file}" ]
        }
    },

    # Specific overrides for Windows envs
    if env(win-cmd) {
        archive: {
            extension: ".lib",
            flags: [ "/NOLOGO", "/OUT:${sbs.output_file}" ]
        },
        shared: {
            extension: ".dll",
            flags: [ "/NOLOGO", "/DLL", "/OUT:${sbs.output_file}" ]
        },
        executable: {
            extension: ".exe",
            flags: [ "/OUT:${sbs.output_file}", "/DEFAULTLIB:libcmt.lib", "/NOLOGO", "/SUBSYSTEM:CONSOLE" ]
        }
    }
}

# The debug configuration adds flags to generate debug information
config clang-debug extends clang-config {
    compile: { flags: [ "-ggdb", "-O0" ] }

    if env(win-cmd) {
        shared: { flags: [ "/DEBUG:FULL" ] },
        executable: { flags: [ "/DEBUG:FULL" ] }
    }
}

# The release configuration adds specifc flags to get optimized code
config clang-release extends clang-config {
    compile: { flags: [ "-O3" ] }
}

# The sanitize config adds the -fsanitize flag to compile with Clang's sanitizers
config clang-sanitize extends clang-release {
    compile: { flags: [ "-O0", "-fsanitize=address,undefined" ] },
}
